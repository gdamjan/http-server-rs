language: rust
rust: stable
sudo: false

env:
  global:
    - PROJECT_NAME=http-server

matrix:
  include:
    - os: osx
      env: TARGET=x86_64-apple-darwin
    - os: linux
      env: TARGET=x86_64-unknown-linux-gnu
    - os: windows
      env: TARGET=x86_64-pc-windows-msvc SUFFIX=.exe

script:
  - cargo build ${TRAVIS_TAG:+--release} --target $TARGET
  - size target/$TARGET/*/${PROJECT_NAME}${SUFFIX}

before_deploy:
  - if [ "$TRAVIS_OS_NAME" = "windows" ]; then choco install zip ; fi
  - strip "target/$TARGET/release/${PROJECT_NAME}${SUFFIX}"
  - zip ${PROJECT_NAME}-${TRAVIS_TAG}-${TARGET}.zip -j "target/$TARGET/release/${PROJECT_NAME}${SUFFIX}"

deploy:
  provider: releases
  api_key: $GIT_TOKEN
  file: ${PROJECT_NAME}-${TRAVIS_TAG}-${TARGET}.zip
  # don't delete the artifacts from previous phases
  skip_cleanup: true
  overwrite: true
  # deploy when a new tag is pushed
  on:
    # channel to use to produce the release artifacts
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true

## Need to cache the whole `.cargo` directory to keep .crates.toml for
## cargo-update to work
cache:
  directories:
    - ${TRAVIS_HOME}/.cargo

## But don't cache the cargo registry
before_cache:
  - rm -rf ${TRAVIS_HOME}/.cargo/registry
